{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Welcome to Wiki Pages of Information Technology and Communication Sciences at Tampere University. This wiki is meant to be a tool for personnel of our department, supporting research and teaching needs. You (yes you!) can contribute content to this wiki and help us building the common crowdsourced knowledge database. University Bureaucracy Contracts and salary PhD thesis Technical Notes How to set up Remote Access How to install TUNI VPN TUNI Narvi Cluster Meta How to contrubute to the Wiki Links Computer Vision Group Tampere University","title":"Welcome"},{"location":"#welcome","text":"Welcome to Wiki Pages of Information Technology and Communication Sciences at Tampere University. This wiki is meant to be a tool for personnel of our department, supporting research and teaching needs. You (yes you!) can contribute content to this wiki and help us building the common crowdsourced knowledge database.","title":"Welcome"},{"location":"#university-bureaucracy","text":"Contracts and salary PhD thesis","title":"University Bureaucracy"},{"location":"#technical-notes","text":"How to set up Remote Access How to install TUNI VPN TUNI Narvi Cluster","title":"Technical Notes"},{"location":"#meta","text":"How to contrubute to the Wiki","title":"Meta"},{"location":"#links","text":"Computer Vision Group Tampere University","title":"Links"},{"location":"Meta/how-to-contribute/","text":"How to Contribute to This Wiki? This Wiki \ud83d\udcd6 is a crowdsourced base of knowledge accumulated by generations of current and ex research assistants, students, faculty members, and other personnel. It is \"whatever\" annoying you don't remember after two months anymore or what frequently someone asks. The knowledge is expected to be contributed via Markdown files ( .md ) and submitted as Pull Requests to TUNI-ITC/wiki . This guide describes this process step-by-step. There are two options on how to contribute to Wiki: Do-it-yourself \ud83d\udc4d: you are following this guide and submitting the Pull Request. Ask somebody: for instance, you are not familiar with git and don't want to discover its beauty, then, create an Issue in TUNI-ITC/wiki and share a .md file with us. Here are the guide and an online Markdown editor . What Can I Contribute? Anything! Style, spelling, new knowledge, Wiki's engine. Anything, ok? \ud83e\udd17 Ok, What Should I Do? I already have a fork If your fork is even with TUNI-ITC/wiki you are good to go! Otherwise, before starting another contribution, please make sure your fork is not behind the TUNI-ITC/wiki . Of course, the easiest way to sync a fork (and the last resort measure if something went wrong) is to delete the fork from your GitHub account and fork TUNI-ITC/wiki again but, as the downside, your followers will be notified that you made a fork. So, a less barbaric approach is to sync it. Here is how you can do it. To avoid issues, back up your folder, delete it from your machine, and clone the fork again. # pull the changes made on TUNI-ITC/wiki locally on your machine git pull --rebase https://github.com/TUNI-ITC/wiki.git main # push the differences to your GitHub fork such that they appear before yours if you had any # (it is forceful \u2013 rewrites history of commits but it is safe unless somebody forked your fork) git push --force-with-lease origin main At this point, your GitHub fork should be even with TUNI-ITC/wiki or be ahead by X commits. If these X commits are not the ones you want to have on your fork and you would like to remove them (you will not be able to restore them!), do these: # where `X` is the number of commits you would like to remove from your fork git reset --hard HEAD~X # this is, again, forceful and rewrites history but it is ok if none relies on your fork. git push --force origin main The pipeline boils down to these several steps which should be familiar to anyone who worked with an open-source project on some sort of Hub \ud83e\udd13 (GitHub, Bitbucket, GitLab, and such): Create an Issue (skip if feeling lazy or playing like a bad boy) Fork & Clone Add/Change Push to the Fork Create a Pull Request 1. Create an Issue This is completely optional and we would like to see an issue just to track the progress and maybe suggest where (which section) to put your knowledge or help you with something. 2. Fork & Clone You can edit directly through the GitHub web page (\"Add File\" and \"Edit\" button) or do it locally on your computer. We recommend learning to do it the hard way by forking and cloning it manually you will benefit from this knowledge in your career, otherwise skip this step. Fork means that you make a personal copy of this wiki - note that anyone can do that and it does not mess the main branch! To do that go to TUNI-ITC/wiki and press the top-right button Fork - if you don't have a Github account yet, you need to make one. After that, you should have the forked repo somewhere in your account, e.g., github.com/<MY_ACCOUNT>/wiki/ . To clone your fork locally, in terminal type: git clone https://github.com/<MY_ACCOUNT>/wiki/ and it's done! 3. Add/Change You may freely edit an existing file or create new, e.g., how-to-select-a-coffee-in-a-finnish-supermarket.md . Here are the guide and an online Markdown editor for you to play with. We are using Material Theme for MkDocs . Hence, you may also propose to add more functionality to our wiki. Check out the manuals of both to see what else we can add. Can I check locally how it will look? Sure thing! You will need to install the mkdocs-material engine. It might sound overwhelming but you will need only Python for it (even better if you have conda ): pip install mkdocs-material Once done, you can start a preview server locally cd /path/to/wiki mkdocs serve After, just type localhost:8000 in your browser. See more in the original documentation . 4. Push to the Changes to the Fork Commit your changes! You know how, right? Here is how # it will print the modifications were made compared to last commit git status # this will `stage` you changes git add how-to-do-something.md # this will commit the staged changes # (it may ask you to configure git if you are doing to for the first time) git commit -m \"added how-to-do-something.md\" git push 5. Create a Pull Request Open the page with your fork on GitHub: github.com/<MY_ACCOUNT>/wiki/ . At this point, you should be able to find the changes you made in your fork. Somewhere at the top, you will be asked if you want to make a Pull Request and that your branch is ahead of the main by some commits. Make the request, by adding comments, title, and check that you are proposing the files you expect and submit it. Someone will review and accept it. That's it! Note, once the PR is submitted it cannot be deleted even by the moderators.","title":"How to Contribute to This Wiki?"},{"location":"Meta/how-to-contribute/#how-to-contribute-to-this-wiki","text":"This Wiki \ud83d\udcd6 is a crowdsourced base of knowledge accumulated by generations of current and ex research assistants, students, faculty members, and other personnel. It is \"whatever\" annoying you don't remember after two months anymore or what frequently someone asks. The knowledge is expected to be contributed via Markdown files ( .md ) and submitted as Pull Requests to TUNI-ITC/wiki . This guide describes this process step-by-step. There are two options on how to contribute to Wiki: Do-it-yourself \ud83d\udc4d: you are following this guide and submitting the Pull Request. Ask somebody: for instance, you are not familiar with git and don't want to discover its beauty, then, create an Issue in TUNI-ITC/wiki and share a .md file with us. Here are the guide and an online Markdown editor . What Can I Contribute? Anything! Style, spelling, new knowledge, Wiki's engine. Anything, ok? \ud83e\udd17","title":"How to Contribute to This Wiki?"},{"location":"Meta/how-to-contribute/#ok-what-should-i-do","text":"I already have a fork If your fork is even with TUNI-ITC/wiki you are good to go! Otherwise, before starting another contribution, please make sure your fork is not behind the TUNI-ITC/wiki . Of course, the easiest way to sync a fork (and the last resort measure if something went wrong) is to delete the fork from your GitHub account and fork TUNI-ITC/wiki again but, as the downside, your followers will be notified that you made a fork. So, a less barbaric approach is to sync it. Here is how you can do it. To avoid issues, back up your folder, delete it from your machine, and clone the fork again. # pull the changes made on TUNI-ITC/wiki locally on your machine git pull --rebase https://github.com/TUNI-ITC/wiki.git main # push the differences to your GitHub fork such that they appear before yours if you had any # (it is forceful \u2013 rewrites history of commits but it is safe unless somebody forked your fork) git push --force-with-lease origin main At this point, your GitHub fork should be even with TUNI-ITC/wiki or be ahead by X commits. If these X commits are not the ones you want to have on your fork and you would like to remove them (you will not be able to restore them!), do these: # where `X` is the number of commits you would like to remove from your fork git reset --hard HEAD~X # this is, again, forceful and rewrites history but it is ok if none relies on your fork. git push --force origin main The pipeline boils down to these several steps which should be familiar to anyone who worked with an open-source project on some sort of Hub \ud83e\udd13 (GitHub, Bitbucket, GitLab, and such): Create an Issue (skip if feeling lazy or playing like a bad boy) Fork & Clone Add/Change Push to the Fork Create a Pull Request","title":"Ok, What Should I Do?"},{"location":"Meta/how-to-contribute/#1-create-an-issue","text":"This is completely optional and we would like to see an issue just to track the progress and maybe suggest where (which section) to put your knowledge or help you with something.","title":"1. Create an Issue"},{"location":"Meta/how-to-contribute/#2-fork-clone","text":"You can edit directly through the GitHub web page (\"Add File\" and \"Edit\" button) or do it locally on your computer. We recommend learning to do it the hard way by forking and cloning it manually you will benefit from this knowledge in your career, otherwise skip this step. Fork means that you make a personal copy of this wiki - note that anyone can do that and it does not mess the main branch! To do that go to TUNI-ITC/wiki and press the top-right button Fork - if you don't have a Github account yet, you need to make one. After that, you should have the forked repo somewhere in your account, e.g., github.com/<MY_ACCOUNT>/wiki/ . To clone your fork locally, in terminal type: git clone https://github.com/<MY_ACCOUNT>/wiki/ and it's done!","title":"2. Fork &amp; Clone"},{"location":"Meta/how-to-contribute/#3-addchange","text":"You may freely edit an existing file or create new, e.g., how-to-select-a-coffee-in-a-finnish-supermarket.md . Here are the guide and an online Markdown editor for you to play with. We are using Material Theme for MkDocs . Hence, you may also propose to add more functionality to our wiki. Check out the manuals of both to see what else we can add. Can I check locally how it will look? Sure thing! You will need to install the mkdocs-material engine. It might sound overwhelming but you will need only Python for it (even better if you have conda ): pip install mkdocs-material Once done, you can start a preview server locally cd /path/to/wiki mkdocs serve After, just type localhost:8000 in your browser. See more in the original documentation .","title":"3. Add/Change"},{"location":"Meta/how-to-contribute/#4-push-to-the-changes-to-the-fork","text":"Commit your changes! You know how, right? Here is how # it will print the modifications were made compared to last commit git status # this will `stage` you changes git add how-to-do-something.md # this will commit the staged changes # (it may ask you to configure git if you are doing to for the first time) git commit -m \"added how-to-do-something.md\" git push","title":"4. Push to the Changes to the Fork"},{"location":"Meta/how-to-contribute/#5-create-a-pull-request","text":"Open the page with your fork on GitHub: github.com/<MY_ACCOUNT>/wiki/ . At this point, you should be able to find the changes you made in your fork. Somewhere at the top, you will be asked if you want to make a Pull Request and that your branch is ahead of the main by some commits. Make the request, by adding comments, title, and check that you are proposing the files you expect and submit it. Someone will review and accept it. That's it! Note, once the PR is submitted it cannot be deleted even by the moderators.","title":"5. Create a Pull Request"},{"location":"Technical-Notes/how-to-set-up-remote-access/","text":"How to Set up Remote Access I assume that you have an Ubuntu 16.04 or 18.04 desktop ( host ) at your office and you would like to access it remotely from, let's say, your personal laptop ( client ). The host machine will be reachable using a University-maintained laptop using University TUNI-STAFF WiFi or pre-installed VPN, for a self-maintained laptop you will need to do something extra. Connecting using a proxy server ( ssh-forward.cc.tut.fi ) Pros & Cons \ud83d\udc4d Only the ssh traffic is going through the University facilities unlike using a VPN. \ud83d\udc4d Stable. The IP of the host machine will not change after reconnection and the connection is lost rarely as it uses the wired connection. \ud83d\udc4d Fast. The machine is using a Gigabit connection from the wall socket. \ud83d\udca9 You will need to contact it-helpdesk@tuni.fi . This might take some time. \ud83d\udca9 ssh-forward.cc.tut.fi doesn't support key-pair authentication. You can only login with passwords. \ud83d\udca9 Different log-in procedure depending on the network you are using. One-step on roam.fi/eduroam/TUNI-STAFF , two-step on other networks. \ud83d\udca9/\ud83d\udc4d ssh-forward.cc.tut.fi has very limited disk space for each user (few MB). Therefore, can only be used as a proxy for your ssh connection which is its main purpose . How to set up Email it-helpdesk@tuni.fi to connect your office machine to pit.cs.tut.fi network. Specify the following things: a) the inventory number of the machine (on the sticker), b) MAC address of the socket in the machine you would like to use for the wired connection to the internet (you may have several Ethernet ports--you need only one), c) mention the Ethernet socket number from the wall that you will use. They will assign a fixed IP/FQDN and you will not need to type your credentials every 24 hours to have the internet connection. At this point, you should have had received the response from it-helpdesk@tuni.fi and be able to connect to the internet using the socket you specified. If so, check your IP and type host your_IP to find out the FQDN. It should be something like IP_reversed pointed to **********.pit.cs.tut.fi . Install openssh-server on your machine (host). This will allow ssh connection to this machine. Next, make sure no WiFi connection connects automatically after the startup. Type sudo nm-connection-editor in terminal (or just go to Edit connection from the status menu on 16.04). Click on saved connections and go to Preferences (setting icon at the bottom) > General > uncheck the box. Allow your Wired connection to automatically connect when available. sudo nm-connection-editor , go to General tab and make sure the box is checked. Now your machine (host) should be reachable from TUNI-maintained computers connected to TUNI-STAFF WiFi or VPN directly via ssh . To connect to it from a self-maintained/personal device, you need to get an access to ssh-forward.cc.tut.fi . For this, proceed to tut.fi/omatunnus (yes, tut not tuni ) -> Services -> System Access (wait 10 sec) -> search for and select ssh-forward.cc.tut.fi . You will get the confirmation email shortly. Initialize the two-step verification at ssh-forward.cc.tut.fi . For this, ssh with your TUNI credentials to ssh-forward.cc.tut.fi while being connected to one of the University networks ( roam.fi/eduroam/TUNI-STAFF or a university VPN)--you cannot do it from any other network but we got you here as well . Type google-authenticator . It will ask you several questions and show a QR code (resize your window to see it). Answer the questions as follows: Do you want authentication tokens... -> y Do you want me to update your \"/home/user/... -> y Do you want to disallow multiple uses... -> n By default, tokens are good for 30 seconds -> n If the computer that you are logging into -> y Install Google Authenticator app for your smartphone. It is going to be used for two-step authentication when non-university network is used (connecting from home internet). You don't need an account to use this service if it will ask--just find a button to scan a QR code. Once it is done it will create an entry with a 6-digit passcode which changes every 30 secs. To connect to your machine, use ssh -J your_tuni_username@ssh-forward.cc.tut.fi your_host_username@*********.pit.cs.tut.fi If you are on a University network ( roam.fi/eduroam/TUNI-STAFF or VPN), it will only ask for your TUNI and host passwords; If you are using a non-University network, it will also ask for a Verification Code which is a temporal code from Google Authenticator app you installed on your smartphone. Tip Config the ssh connection in ~/.ssh/config : Host connection_name HostName ***********. pit . cs . tut . fi User your_username_at_the_host_machine ProxyCommand ssh your - tuni - username @ssh - forward . cc . tut . fi - W % h : % p After doing this, you will be able to do ssh connection_name to ssh directly to *********.pit.cs.tut.fi , forward ports, and transfer large files using scp/rsync . It is also useful if you are using VSCode or any other text editor which supports remote development. Additionally, it is handy if you would like to mount folders from the host to your client. You can use sshfs connection_name:/path/to/remote_folder /path/to/local_folder . How to initialize the two-step verification remotely If you are setting up your connection remotely and you don't have an access to the university networks nor VPN at the moment, you still can do it. For this, you will need to apply for another TUT service. Proceed to tut.fi/omatunnus (yes, tut not tuni ) -> Services -> System Access (wait 10 sec) -> search for linux-ssh.cc.tut.fi or staff-linux.cc.tut.fi depending on whether your are a student or a staff. When the access is granted (5 mins), ssh to one of them, and from there ssh to ssh-forward.cc.tut.fi -- no verification code will be asked as these servers are in the university network.","title":"How to Set up Remote Access"},{"location":"Technical-Notes/how-to-set-up-remote-access/#how-to-set-up-remote-access","text":"I assume that you have an Ubuntu 16.04 or 18.04 desktop ( host ) at your office and you would like to access it remotely from, let's say, your personal laptop ( client ). The host machine will be reachable using a University-maintained laptop using University TUNI-STAFF WiFi or pre-installed VPN, for a self-maintained laptop you will need to do something extra.","title":"How to Set up Remote Access"},{"location":"Technical-Notes/how-to-set-up-remote-access/#connecting-using-a-proxy-server-ssh-forwardcctutfi","text":"","title":"Connecting using a proxy server (ssh-forward.cc.tut.fi)"},{"location":"Technical-Notes/how-to-set-up-remote-access/#pros-cons","text":"\ud83d\udc4d Only the ssh traffic is going through the University facilities unlike using a VPN. \ud83d\udc4d Stable. The IP of the host machine will not change after reconnection and the connection is lost rarely as it uses the wired connection. \ud83d\udc4d Fast. The machine is using a Gigabit connection from the wall socket. \ud83d\udca9 You will need to contact it-helpdesk@tuni.fi . This might take some time. \ud83d\udca9 ssh-forward.cc.tut.fi doesn't support key-pair authentication. You can only login with passwords. \ud83d\udca9 Different log-in procedure depending on the network you are using. One-step on roam.fi/eduroam/TUNI-STAFF , two-step on other networks. \ud83d\udca9/\ud83d\udc4d ssh-forward.cc.tut.fi has very limited disk space for each user (few MB). Therefore, can only be used as a proxy for your ssh connection which is its main purpose .","title":"Pros &amp; Cons"},{"location":"Technical-Notes/how-to-set-up-remote-access/#how-to-set-up","text":"Email it-helpdesk@tuni.fi to connect your office machine to pit.cs.tut.fi network. Specify the following things: a) the inventory number of the machine (on the sticker), b) MAC address of the socket in the machine you would like to use for the wired connection to the internet (you may have several Ethernet ports--you need only one), c) mention the Ethernet socket number from the wall that you will use. They will assign a fixed IP/FQDN and you will not need to type your credentials every 24 hours to have the internet connection. At this point, you should have had received the response from it-helpdesk@tuni.fi and be able to connect to the internet using the socket you specified. If so, check your IP and type host your_IP to find out the FQDN. It should be something like IP_reversed pointed to **********.pit.cs.tut.fi . Install openssh-server on your machine (host). This will allow ssh connection to this machine. Next, make sure no WiFi connection connects automatically after the startup. Type sudo nm-connection-editor in terminal (or just go to Edit connection from the status menu on 16.04). Click on saved connections and go to Preferences (setting icon at the bottom) > General > uncheck the box. Allow your Wired connection to automatically connect when available. sudo nm-connection-editor , go to General tab and make sure the box is checked. Now your machine (host) should be reachable from TUNI-maintained computers connected to TUNI-STAFF WiFi or VPN directly via ssh . To connect to it from a self-maintained/personal device, you need to get an access to ssh-forward.cc.tut.fi . For this, proceed to tut.fi/omatunnus (yes, tut not tuni ) -> Services -> System Access (wait 10 sec) -> search for and select ssh-forward.cc.tut.fi . You will get the confirmation email shortly. Initialize the two-step verification at ssh-forward.cc.tut.fi . For this, ssh with your TUNI credentials to ssh-forward.cc.tut.fi while being connected to one of the University networks ( roam.fi/eduroam/TUNI-STAFF or a university VPN)--you cannot do it from any other network but we got you here as well . Type google-authenticator . It will ask you several questions and show a QR code (resize your window to see it). Answer the questions as follows: Do you want authentication tokens... -> y Do you want me to update your \"/home/user/... -> y Do you want to disallow multiple uses... -> n By default, tokens are good for 30 seconds -> n If the computer that you are logging into -> y Install Google Authenticator app for your smartphone. It is going to be used for two-step authentication when non-university network is used (connecting from home internet). You don't need an account to use this service if it will ask--just find a button to scan a QR code. Once it is done it will create an entry with a 6-digit passcode which changes every 30 secs. To connect to your machine, use ssh -J your_tuni_username@ssh-forward.cc.tut.fi your_host_username@*********.pit.cs.tut.fi If you are on a University network ( roam.fi/eduroam/TUNI-STAFF or VPN), it will only ask for your TUNI and host passwords; If you are using a non-University network, it will also ask for a Verification Code which is a temporal code from Google Authenticator app you installed on your smartphone. Tip Config the ssh connection in ~/.ssh/config : Host connection_name HostName ***********. pit . cs . tut . fi User your_username_at_the_host_machine ProxyCommand ssh your - tuni - username @ssh - forward . cc . tut . fi - W % h : % p After doing this, you will be able to do ssh connection_name to ssh directly to *********.pit.cs.tut.fi , forward ports, and transfer large files using scp/rsync . It is also useful if you are using VSCode or any other text editor which supports remote development. Additionally, it is handy if you would like to mount folders from the host to your client. You can use sshfs connection_name:/path/to/remote_folder /path/to/local_folder .","title":"How to set up"},{"location":"Technical-Notes/how-to-set-up-remote-access/#how-to-initialize-the-two-step-verification-remotely","text":"If you are setting up your connection remotely and you don't have an access to the university networks nor VPN at the moment, you still can do it. For this, you will need to apply for another TUT service. Proceed to tut.fi/omatunnus (yes, tut not tuni ) -> Services -> System Access (wait 10 sec) -> search for linux-ssh.cc.tut.fi or staff-linux.cc.tut.fi depending on whether your are a student or a staff. When the access is granted (5 mins), ssh to one of them, and from there ssh to ssh-forward.cc.tut.fi -- no verification code will be asked as these servers are in the university network.","title":"How to initialize the two-step verification remotely"},{"location":"Technical-Notes/install-tuni-vpn/","text":"Install TUNI VPN The TUNI intra documentation is here https://intra.tuni.fi/en/handbook?page=2638 but its kind of a mess and therefore below easy to follow information. Self-maintained Linux Box (tested Ubuntu 18.04) eduVPN application is not available for Linux and thefore you must use openvpn. Generic instructions are available here https://eduvpn.tuni.fi/vpn-user-portal/documentation for various OS, but, for example, Ubuntu is described below. Install OpenVPN: ~$ sudo apt-get install network-manager-openvpn-gnome Generate your own at https://eduvpn.tuni.fi/vpn-user-portal/configurations (give name, e.g., \"joni-laptop\", and store somewhere). Start openvpn: ~$ sudo openvpn <PATH_TO_MY_GEN_CONFIG>.ovpn And that's it - your internet connection goes over VPN and you have access to university computers!! Note: You need to update the VPN configuration files every now and then (the expriry date by default is in the filename, e.g., \"Downloads/eduvpn.tuni.fi_internet_20201102_joni-laptop.ovpn#) Update on the Linux desktop client of eduVPN: There is a Linux desktop client and Python API for eduVPN and here is the link to that: https://python-eduvpn-client.readthedocs.io/en/master/introduction.html#installation I tested it on Ubuntu 18.04 and 20.04 and it works fine. The steps are simple and listed below (taken from the above documentation link). $ sudo -s $ apt install apt-transport-https curl $ curl -L https://repo.eduvpn.org/debian/eduvpn.key | apt-key add - $ echo \"deb https://repo.eduvpn.org/debian/ stretch main\" > /etc/apt/sources.list.d/eduvpn.list $ apt update $ apt install eduvpn-client Open the eduvpn-client from the terminal (or app launcher) and add the university name from the drop-down menu. They may ask you to sign-in with the TUNI username. Then select the university name and toggle the connected button. If it does not work then you are on your own.","title":"Install TUNI VPN"},{"location":"Technical-Notes/install-tuni-vpn/#install-tuni-vpn","text":"The TUNI intra documentation is here https://intra.tuni.fi/en/handbook?page=2638 but its kind of a mess and therefore below easy to follow information.","title":"Install TUNI VPN"},{"location":"Technical-Notes/install-tuni-vpn/#self-maintained-linux-box-tested-ubuntu-1804","text":"eduVPN application is not available for Linux and thefore you must use openvpn. Generic instructions are available here https://eduvpn.tuni.fi/vpn-user-portal/documentation for various OS, but, for example, Ubuntu is described below. Install OpenVPN: ~$ sudo apt-get install network-manager-openvpn-gnome Generate your own at https://eduvpn.tuni.fi/vpn-user-portal/configurations (give name, e.g., \"joni-laptop\", and store somewhere). Start openvpn: ~$ sudo openvpn <PATH_TO_MY_GEN_CONFIG>.ovpn And that's it - your internet connection goes over VPN and you have access to university computers!! Note: You need to update the VPN configuration files every now and then (the expriry date by default is in the filename, e.g., \"Downloads/eduvpn.tuni.fi_internet_20201102_joni-laptop.ovpn#)","title":"Self-maintained Linux Box (tested Ubuntu 18.04)"},{"location":"Technical-Notes/install-tuni-vpn/#update-on-the-linux-desktop-client-of-eduvpn","text":"There is a Linux desktop client and Python API for eduVPN and here is the link to that: https://python-eduvpn-client.readthedocs.io/en/master/introduction.html#installation I tested it on Ubuntu 18.04 and 20.04 and it works fine. The steps are simple and listed below (taken from the above documentation link). $ sudo -s $ apt install apt-transport-https curl $ curl -L https://repo.eduvpn.org/debian/eduvpn.key | apt-key add - $ echo \"deb https://repo.eduvpn.org/debian/ stretch main\" > /etc/apt/sources.list.d/eduvpn.list $ apt update $ apt install eduvpn-client Open the eduvpn-client from the terminal (or app launcher) and add the university name from the drop-down menu. They may ask you to sign-in with the TUNI username. Then select the university name and toggle the connected button. If it does not work then you are on your own.","title":"Update on the Linux desktop client of eduVPN:"},{"location":"Technical-Notes/tuni-narvi-cluster/","text":"TUNI Narvi Cluster This amazing guide was originally posed in wiki.eduuni.fi and composed by Heikki Huttunen. We obtained his permission to use it here. It was modernized and expanded since then. This document describes how to use the TUNI TCSC Narvi computing cluster. What is Narvi? Narvi is the SLURM cluster that substituted the old merope cluster in 2017. The cluster is used by researchers, faculty members, and students at Tampere University. There are 140 CPU-only nodes with 3000+ CPU cores Also Narvi has 22 nodes with different GPU nodes with 4 GPUs in each. Specifically, there are 6 nodes with Tesla V100 32 GB and 4 with Tesla V100 16 GB 2 nodes with Tesla P100 16 GB and 6 with Tesla P100 12 GB 4 nodes with Tesla K80 12 GB How to Get an Account? Go to id.tuni.fi Choose Identity management \u2192 My user rights \u2192 Apply for a new user right Choose the correct contract (studen/staff). If you fill the application as a student also tell the Course name and the responsible teacher Search for Linux Servers (LINUX-SERVERS) TCSC HPC Cluster In the form, enter application details: I need Narvi account. My supervisor is X. . Your supervisor will receive an acceptance link and you will be granted a new account. In a few days, you will receive an email from TCSC telling you to send an ssh public key to them. Create a key pair (see below or just google for it) and send the public one to them. Soon you will be able to login to the front end narvi.tut.fi using ssh . How to generate an ssh key-pair \ud83d\udd10? Here is how to do it on Linux and Mac systems. The instructions for Windows can be easily found on google. ssh-keygen -f ~/.ssh/narvi_key The command will ask for a new password which will be asked when this key is used. After, the script will save two keys ( narvi_key and narvi_key.pub ) in ~/.ssh/ folder. *.pub is the public key. The first time you will use this key with ssh it may complain about permissions ( Permissions are too open. ). If so, you will need to change the permissions of the private key chmod 600 ~/.ssh/narvi_key I don't see any GPU partitions Please write an e-mail to the admin ( tcsc.tau@tuni.fi ) asking to add you to the GPU group. By default, you will only have access to CPU-only nodes. How to Check the Queue To see the status of the queue, type squeue # for a specific partitions (e.g. `normal` or `gpu`). squeue -p gpu # for a specific user squeue -u <user> How to Run a Job Remember: do not use the login node for computation \u2013 it is slow and will degrade the performance of the login node for other users! There are two common ways to run a job at a slurm cluster: srun sbatch The main difference is that srun is interactive which means the terminal will be attached to the current session. The experience is just like with any other command in your terminal. Note, that when the queue is full you will have to wait until you get resources. If you use sbatch , you submit your job to the slurm queue and get your terminal back; you can disconnect, kill your terminal, etc. with no consequence. In the case of srun , killing the terminal would kill the job. Hence, sbatch is recommended. Here is the example srun command which will ask the cluster to start an interactive shell with 1 GPU ( --gres ) and 10 CPUs ( --cpus-per-task ), 10 GB of RAM ( --mem-per-cpu ) that will be available to you for 30 minutes ( --time ): srun \\ --pty \\ --job-name pepe_run \\ --partition gpu \\ --gres gpu:1 \\ --mem-per-cpu 1G \\ --ntasks 1 \\ --cpus-per-task 10 \\ --time 00:30:00 \\ /bin/bash -i and this is an example sbatch command which will ask the cluster to run my_script.sh with 1 GPU and 10 CPUs, 10 GB of RAM that will run for at most 30 minutes (if the script has finished execution the job will be ended), the output and error logs will be saved to log_JOBID.txt ( --output , --error ): sbatch \\ --job-name pepe_run \\ --partition gpu \\ --gres gpu:1 \\ --mem-per-cpu 1g \\ --ntasks 1 \\ --cpus-per-task 10 \\ --time 00:30:00 \\ --output log_%j.txt \\ --error log_%j.txt \\ my_script.sh you may also use --constraint='kepler|pascal|volta' in order to select a specific gpu architecture. Instead of specifying the resources and other information as command-line arguments, you may find it useful to list them inside of my_script.sh and then just use sbatch my_script.sh : #!/bin/bash #SBATCH --job-name=pepe_run #SBATCH --gres=gpu:1 #SBATCH --time=00:30:00 # and so on. To comment SBATCH entry use `##SBATCH --arg ...` # here starts your script To learn more sbatch hacks, a reader is also referred to this nice tutorial . How to Cancel My Job To cancel a specific job you are running, use scancel <JobID> How to Transfer Data? The simplest way is to use scp command scp -i ~/.ssh/narvi_key -r ./folder user@narvi.tut.fi:/narvi/path/ where -r means to copy the folder with all files in it. However, once the internet connection is interrupted you will need to start all over again. To have an opportunity to resume the data transfer try rsync instead rsync -ahP -e \"ssh -i ~/.ssh/narvi_key\" ./folder user@narvi.tut.fi:/narvi/path/ where -ah means to preserve permissions symlinks, etc as in the original folder and h makes the progress \"human-readable\", and P allows to continue data transfer (sends missing files on the target path \ud83e\udd13). Trailing / in rsync makes the difference rsync /dir1/dir2/ /home/dir3 - copies the contents of /dir1/dir2 but not the dir2 folder itself. rsync /dir1/dir2 /home/dir3 \u2013 copies the folder dir2 along with all its contents. If you would like to see the files from a remote machine you may mount the folder locally. On Ubuntu/Debian install sshfs and run this mkdir narvi_folder sshfs -o IdentityFile = ~/.ssh/narvi_key user@narvi.tut.fi:/narvi/folder/ ./narvi_folder the content of the /narvi/folder will be shown in ./narvi_folder . Mind that the changes in either folder will be reflected in another one. To unmount the folder use umount ./narvi_folder How Do I Install My Software Before you do so, check if the software you would like to install is already installed by the admin (e.g. matlab, cuda, and gcc). These are set up using module functionality. You can load a module by specifying module load <mod> inside of your script. To see all available modules run module avail . If you are not satisfied with the selection you can install your own. Here we will focus on Python packages and virtual environment manager conda which is already installed on Narvi (try: which conda ). conda Has Many Linux Tools Besides a ton of Python packages, conda has surprisingly many common Linux tools, e.g. tmux , htop , ffmpeg , vim , and more. This is especially useful if you would like to install them but do not have sudo rights. Creating a conda Environment Let's start by creating an empty conda environment conda create --name my_env Activate it (meaning that all binaries installed in this environment will be used instead of the system-wise packages) conda activate my_env # if it didn't work try `source activate my_env` Afterward, you can install conda packages conda install python pip matplotlib scikit-learn If default conda channels don't have some package you search for other conda channels: conda install dlib --channel = menpo If your favorite package is not available anywhere in conda OR you would like to install OpenCV , try to install it via pip : # check if you are using the `pip` from your `conda` env which pip pip install opencv-python conda vs pip inside of conda env? According to official anaconda documentation , you should install as many requirements as possible with conda , then use pip . Another problem with pip packages inside of conda is associated with poor dependence handling and just bad experience when trying to replicate the same environment on another machine.","title":"TUNI Narvi Cluster"},{"location":"Technical-Notes/tuni-narvi-cluster/#tuni-narvi-cluster","text":"This amazing guide was originally posed in wiki.eduuni.fi and composed by Heikki Huttunen. We obtained his permission to use it here. It was modernized and expanded since then. This document describes how to use the TUNI TCSC Narvi computing cluster. What is Narvi? Narvi is the SLURM cluster that substituted the old merope cluster in 2017. The cluster is used by researchers, faculty members, and students at Tampere University. There are 140 CPU-only nodes with 3000+ CPU cores Also Narvi has 22 nodes with different GPU nodes with 4 GPUs in each. Specifically, there are 6 nodes with Tesla V100 32 GB and 4 with Tesla V100 16 GB 2 nodes with Tesla P100 16 GB and 6 with Tesla P100 12 GB 4 nodes with Tesla K80 12 GB","title":"TUNI Narvi Cluster"},{"location":"Technical-Notes/tuni-narvi-cluster/#how-to-get-an-account","text":"Go to id.tuni.fi Choose Identity management \u2192 My user rights \u2192 Apply for a new user right Choose the correct contract (studen/staff). If you fill the application as a student also tell the Course name and the responsible teacher Search for Linux Servers (LINUX-SERVERS) TCSC HPC Cluster In the form, enter application details: I need Narvi account. My supervisor is X. . Your supervisor will receive an acceptance link and you will be granted a new account. In a few days, you will receive an email from TCSC telling you to send an ssh public key to them. Create a key pair (see below or just google for it) and send the public one to them. Soon you will be able to login to the front end narvi.tut.fi using ssh . How to generate an ssh key-pair \ud83d\udd10? Here is how to do it on Linux and Mac systems. The instructions for Windows can be easily found on google. ssh-keygen -f ~/.ssh/narvi_key The command will ask for a new password which will be asked when this key is used. After, the script will save two keys ( narvi_key and narvi_key.pub ) in ~/.ssh/ folder. *.pub is the public key. The first time you will use this key with ssh it may complain about permissions ( Permissions are too open. ). If so, you will need to change the permissions of the private key chmod 600 ~/.ssh/narvi_key I don't see any GPU partitions Please write an e-mail to the admin ( tcsc.tau@tuni.fi ) asking to add you to the GPU group. By default, you will only have access to CPU-only nodes.","title":"How to Get an Account?"},{"location":"Technical-Notes/tuni-narvi-cluster/#how-to-check-the-queue","text":"To see the status of the queue, type squeue # for a specific partitions (e.g. `normal` or `gpu`). squeue -p gpu # for a specific user squeue -u <user>","title":"How to Check the Queue"},{"location":"Technical-Notes/tuni-narvi-cluster/#how-to-run-a-job","text":"Remember: do not use the login node for computation \u2013 it is slow and will degrade the performance of the login node for other users! There are two common ways to run a job at a slurm cluster: srun sbatch The main difference is that srun is interactive which means the terminal will be attached to the current session. The experience is just like with any other command in your terminal. Note, that when the queue is full you will have to wait until you get resources. If you use sbatch , you submit your job to the slurm queue and get your terminal back; you can disconnect, kill your terminal, etc. with no consequence. In the case of srun , killing the terminal would kill the job. Hence, sbatch is recommended. Here is the example srun command which will ask the cluster to start an interactive shell with 1 GPU ( --gres ) and 10 CPUs ( --cpus-per-task ), 10 GB of RAM ( --mem-per-cpu ) that will be available to you for 30 minutes ( --time ): srun \\ --pty \\ --job-name pepe_run \\ --partition gpu \\ --gres gpu:1 \\ --mem-per-cpu 1G \\ --ntasks 1 \\ --cpus-per-task 10 \\ --time 00:30:00 \\ /bin/bash -i and this is an example sbatch command which will ask the cluster to run my_script.sh with 1 GPU and 10 CPUs, 10 GB of RAM that will run for at most 30 minutes (if the script has finished execution the job will be ended), the output and error logs will be saved to log_JOBID.txt ( --output , --error ): sbatch \\ --job-name pepe_run \\ --partition gpu \\ --gres gpu:1 \\ --mem-per-cpu 1g \\ --ntasks 1 \\ --cpus-per-task 10 \\ --time 00:30:00 \\ --output log_%j.txt \\ --error log_%j.txt \\ my_script.sh you may also use --constraint='kepler|pascal|volta' in order to select a specific gpu architecture. Instead of specifying the resources and other information as command-line arguments, you may find it useful to list them inside of my_script.sh and then just use sbatch my_script.sh : #!/bin/bash #SBATCH --job-name=pepe_run #SBATCH --gres=gpu:1 #SBATCH --time=00:30:00 # and so on. To comment SBATCH entry use `##SBATCH --arg ...` # here starts your script To learn more sbatch hacks, a reader is also referred to this nice tutorial .","title":"How to Run a Job"},{"location":"Technical-Notes/tuni-narvi-cluster/#how-to-cancel-my-job","text":"To cancel a specific job you are running, use scancel <JobID>","title":"How to Cancel My Job"},{"location":"Technical-Notes/tuni-narvi-cluster/#how-to-transfer-data","text":"The simplest way is to use scp command scp -i ~/.ssh/narvi_key -r ./folder user@narvi.tut.fi:/narvi/path/ where -r means to copy the folder with all files in it. However, once the internet connection is interrupted you will need to start all over again. To have an opportunity to resume the data transfer try rsync instead rsync -ahP -e \"ssh -i ~/.ssh/narvi_key\" ./folder user@narvi.tut.fi:/narvi/path/ where -ah means to preserve permissions symlinks, etc as in the original folder and h makes the progress \"human-readable\", and P allows to continue data transfer (sends missing files on the target path \ud83e\udd13). Trailing / in rsync makes the difference rsync /dir1/dir2/ /home/dir3 - copies the contents of /dir1/dir2 but not the dir2 folder itself. rsync /dir1/dir2 /home/dir3 \u2013 copies the folder dir2 along with all its contents. If you would like to see the files from a remote machine you may mount the folder locally. On Ubuntu/Debian install sshfs and run this mkdir narvi_folder sshfs -o IdentityFile = ~/.ssh/narvi_key user@narvi.tut.fi:/narvi/folder/ ./narvi_folder the content of the /narvi/folder will be shown in ./narvi_folder . Mind that the changes in either folder will be reflected in another one. To unmount the folder use umount ./narvi_folder","title":"How to Transfer Data?"},{"location":"Technical-Notes/tuni-narvi-cluster/#how-do-i-install-my-software","text":"Before you do so, check if the software you would like to install is already installed by the admin (e.g. matlab, cuda, and gcc). These are set up using module functionality. You can load a module by specifying module load <mod> inside of your script. To see all available modules run module avail . If you are not satisfied with the selection you can install your own. Here we will focus on Python packages and virtual environment manager conda which is already installed on Narvi (try: which conda ). conda Has Many Linux Tools Besides a ton of Python packages, conda has surprisingly many common Linux tools, e.g. tmux , htop , ffmpeg , vim , and more. This is especially useful if you would like to install them but do not have sudo rights.","title":"How Do I Install My Software"},{"location":"Technical-Notes/tuni-narvi-cluster/#creating-a-conda-environment","text":"Let's start by creating an empty conda environment conda create --name my_env Activate it (meaning that all binaries installed in this environment will be used instead of the system-wise packages) conda activate my_env # if it didn't work try `source activate my_env` Afterward, you can install conda packages conda install python pip matplotlib scikit-learn If default conda channels don't have some package you search for other conda channels: conda install dlib --channel = menpo If your favorite package is not available anywhere in conda OR you would like to install OpenCV , try to install it via pip : # check if you are using the `pip` from your `conda` env which pip pip install opencv-python conda vs pip inside of conda env? According to official anaconda documentation , you should install as many requirements as possible with conda , then use pip . Another problem with pip packages inside of conda is associated with poor dependence handling and just bad experience when trying to replicate the same environment on another machine.","title":"Creating a conda Environment"},{"location":"University-Bureaucracy/employee/","text":"Make a work contract request As a supervisor you need to confirm contracts to your group memers. For contracts send email to itc-hr.tau at tuni.fi . You need to mention: The period of contract (e.g. Jan 1 2021 - Dec 31 2021) The salary level (e.g. \"Starting PhD student\") Whether contract is full time (100%) or part-time From which project the salary is paid Also include the following persons to your email: Your controller Project leader (if not you)","title":"Make a work contract request"},{"location":"University-Bureaucracy/employee/#make-a-work-contract-request","text":"As a supervisor you need to confirm contracts to your group memers. For contracts send email to itc-hr.tau at tuni.fi . You need to mention: The period of contract (e.g. Jan 1 2021 - Dec 31 2021) The salary level (e.g. \"Starting PhD student\") Whether contract is full time (100%) or part-time From which project the salary is paid Also include the following persons to your email: Your controller Project leader (if not you)","title":"Make a work contract request"},{"location":"University-Bureaucracy/phd_thesis/","text":"PhD Thesis Below are very short instructions for the process and links to the corresponding university Web pages. Do research (years 1-4) This is the most challenging part, but don't worry, your supervisor will tell you as that's his/her job! Below some links that you should check: A Survival Guide to a PhD by Andrej Karpahty How to do research by Bill Freeman Scientific article writing by Fredo Durand Start writing the thesis (year 4) Your supervisor tells you that \"Now its time!\". What you need is a suitable template, Latex of course. One popular choice is the one by Ville Koljonen: https://www.overleaf.com/read/zskzfgpnpjcz Once you are done (make sure you do it well, check your spelling and grammar), you send a PDF to your supervisor(s) for review and comments. After they are happy to your thesis it is ready for pre-examination. Pre-examination Your supervisor selects two reviewers, makes sure they are available and fills the official form (see below). You need to send the following two documents The pre-examination form filled and submitted by your supervisor is available at https://wiki.tamk.fi/display/DPCEEO/8.+Lomakkeet+ja+ohjeet PhD thesis in PDF format and including the articles - make a single PDF and if its size >15MB you should resize your images before compiling the PDF to the responsible person of your doctoral program. For the Doctoral program of Computing and Electrical Engineering (CEE) the responsible person and main information source is elina.orava \u00e4t tuni.fi who knows everything you need to know! Your documents will be processed by the Faculty council and you will receive an email notification once this is done. Your pre-examiners will also receive a formal invitation and the submitted PhD thesis. Now you cross your fingers, wait for two months and hope for positive reviews. Time to think what you will do next in your life and perhaps stat to look for a position in academia or industry! Defense (end of year 4) Your supervisor again selects 1-2 opponents who will come and publicly torture you. You also need to publish your thesis, i.e. make it publicly and openly available. Do the following steps: Fill the form for the permission to publish the thesis at https://wiki.tamk.fi/display/DPCEEO/8.+Lomakkeet+ja+ohjeet Write a document describing how did you do the changes requested by the pre-examiners (your supervisor should check them, at least in theory) Your supervisor fills the form about the defense and suitable opponent(s) at https://wiki.tamk.fi/display/DPCEEO/8.+Lomakkeet+ja+ohjeet These are sent to the PhD coordinator (Elina for DCEE students). Again the official permission comes from the Faculty council, but meanwhile you already prepare the following: You send the thesis and a separate title page document (tempate at https://libguides.tuni.fi/dissertationpublishing/ ) to dissertations \u00e4t tuni.fi You send the title page, thesis and articles (if separate from the thesis PDF) to Punamusta for printing using this form https://tilaukset.omapumu.com/tampereen_yliopisto/index.php?kielivalinta=englanti - your PhD programme coordinator will tell you the minimum amount to be printed and paid by he faculty. You might want to pay a few more copies for your personal use. After Faculty council informs you that the permission to publish is granted: immediately notify dissertations \u00e4t tuni.fi to publish the thesis in Trepo (example: https://trepo.tuni.fi/handle/10024/124060 ) Your supervisor should send the link to the thesis to the opponent(s) immediately notify dissertations \u00e4t punamusta.com to start printing You should send printed books to the opponents as well Defense You are almost done. Next you need just a little bit of marketing and planning. Press release use the template at https://libguides.tuni.fi/dissertationpublishing/pressrelease along with a nice picture of you and send to viestinta.tau \u00e4t tuni.fi - typically your supervisor takes care of this Book defense auditorium (if physical defense) Order coffee for the defense (if physical defense) Prepare Zoom meeting (if online) and test everything \"Karonkka\" dinner This is not an official part of your defense, but expected in Finland. That means that to \"thank\" your opponents you will take them for a formal table served dinner to some nice place. During Karonkka, typically during the coffee, there are speeches where you thank people who contributed to your successful PhD thesis (semi-official order: opponents, supervisor, co-authors, others) Freedom (years 5-128) You live a happy life!","title":"PhD Thesis"},{"location":"University-Bureaucracy/phd_thesis/#phd-thesis","text":"Below are very short instructions for the process and links to the corresponding university Web pages.","title":"PhD Thesis"},{"location":"University-Bureaucracy/phd_thesis/#do-research-years-1-4","text":"This is the most challenging part, but don't worry, your supervisor will tell you as that's his/her job! Below some links that you should check: A Survival Guide to a PhD by Andrej Karpahty How to do research by Bill Freeman Scientific article writing by Fredo Durand","title":"Do research (years 1-4)"},{"location":"University-Bureaucracy/phd_thesis/#start-writing-the-thesis-year-4","text":"Your supervisor tells you that \"Now its time!\". What you need is a suitable template, Latex of course. One popular choice is the one by Ville Koljonen: https://www.overleaf.com/read/zskzfgpnpjcz Once you are done (make sure you do it well, check your spelling and grammar), you send a PDF to your supervisor(s) for review and comments. After they are happy to your thesis it is ready for pre-examination.","title":"Start writing the thesis (year 4)"},{"location":"University-Bureaucracy/phd_thesis/#pre-examination","text":"Your supervisor selects two reviewers, makes sure they are available and fills the official form (see below). You need to send the following two documents The pre-examination form filled and submitted by your supervisor is available at https://wiki.tamk.fi/display/DPCEEO/8.+Lomakkeet+ja+ohjeet PhD thesis in PDF format and including the articles - make a single PDF and if its size >15MB you should resize your images before compiling the PDF to the responsible person of your doctoral program. For the Doctoral program of Computing and Electrical Engineering (CEE) the responsible person and main information source is elina.orava \u00e4t tuni.fi who knows everything you need to know! Your documents will be processed by the Faculty council and you will receive an email notification once this is done. Your pre-examiners will also receive a formal invitation and the submitted PhD thesis. Now you cross your fingers, wait for two months and hope for positive reviews. Time to think what you will do next in your life and perhaps stat to look for a position in academia or industry!","title":"Pre-examination"},{"location":"University-Bureaucracy/phd_thesis/#defense-end-of-year-4","text":"Your supervisor again selects 1-2 opponents who will come and publicly torture you. You also need to publish your thesis, i.e. make it publicly and openly available. Do the following steps: Fill the form for the permission to publish the thesis at https://wiki.tamk.fi/display/DPCEEO/8.+Lomakkeet+ja+ohjeet Write a document describing how did you do the changes requested by the pre-examiners (your supervisor should check them, at least in theory) Your supervisor fills the form about the defense and suitable opponent(s) at https://wiki.tamk.fi/display/DPCEEO/8.+Lomakkeet+ja+ohjeet These are sent to the PhD coordinator (Elina for DCEE students). Again the official permission comes from the Faculty council, but meanwhile you already prepare the following: You send the thesis and a separate title page document (tempate at https://libguides.tuni.fi/dissertationpublishing/ ) to dissertations \u00e4t tuni.fi You send the title page, thesis and articles (if separate from the thesis PDF) to Punamusta for printing using this form https://tilaukset.omapumu.com/tampereen_yliopisto/index.php?kielivalinta=englanti - your PhD programme coordinator will tell you the minimum amount to be printed and paid by he faculty. You might want to pay a few more copies for your personal use. After Faculty council informs you that the permission to publish is granted: immediately notify dissertations \u00e4t tuni.fi to publish the thesis in Trepo (example: https://trepo.tuni.fi/handle/10024/124060 ) Your supervisor should send the link to the thesis to the opponent(s) immediately notify dissertations \u00e4t punamusta.com to start printing You should send printed books to the opponents as well","title":"Defense (end of year 4)"},{"location":"University-Bureaucracy/phd_thesis/#defense","text":"You are almost done. Next you need just a little bit of marketing and planning. Press release use the template at https://libguides.tuni.fi/dissertationpublishing/pressrelease along with a nice picture of you and send to viestinta.tau \u00e4t tuni.fi - typically your supervisor takes care of this Book defense auditorium (if physical defense) Order coffee for the defense (if physical defense) Prepare Zoom meeting (if online) and test everything","title":"Defense"},{"location":"University-Bureaucracy/phd_thesis/#karonkka-dinner","text":"This is not an official part of your defense, but expected in Finland. That means that to \"thank\" your opponents you will take them for a formal table served dinner to some nice place. During Karonkka, typically during the coffee, there are speeches where you thank people who contributed to your successful PhD thesis (semi-official order: opponents, supervisor, co-authors, others)","title":"\"Karonkka\" dinner"},{"location":"University-Bureaucracy/phd_thesis/#freedom-years-5-128","text":"You live a happy life!","title":"Freedom (years 5-128)"}]}